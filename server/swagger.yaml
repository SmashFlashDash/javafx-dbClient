openapi: 3.0.1
info:
  title: Test Api
  description: Добавлдление записей в таблицу БД
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
- name: item
  description: Работа с товаром

paths:
  /api/v1/item:
    post:
      tags:
      - item
      summary: Добавление товара
      operationId: create
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'

      responses:
        200:
          description: "OK"
        400:
          description: "Invalid input"
      
      
    # get:
    #   tags:
    #   - item
    #   summary: Получение товаров
    #   operationId: getAll
    #   responses:
    #     '200':
    #       description: Посты получены
    #       content:
    #         application/json:
    #           schema:
    #             allOf:
    #               - $ref: '#/components/schemas/Item'
    #     '400':
    #       description: Bad Request
    #     '404':
    #       description: Посты не найдены
        
        
    # put:
    #   tags:
    #   - "item"
    #   summary: "Update an existing pet"
    #   description: ""
    #   operationId: "updatePet"
    #   consumes:
    #   - "application/json"
    #   - "application/xml"
    #   produces:
    #   - "application/xml"
    #   - "application/json"
    #   parameters:
    #   - in: "body"
    #     name: "body"
    #     description: "Pet object that needs to be added to the store"
    #     required: true
    #     schema:
    #       $ref: "#/definitions/Item"
    #   responses:
    #     400:
    #       description: "Invalid ID supplied"
    #     404:
    #       description: "Pet not found"
    #     405:
    #       description: "Validation exception"
    #   security:
    #   - petstore_auth:
    #     - "write:pets"
    #     - "read:pets"
        


        
    # delete:
    #   tags:
    #   - "item"
    #   summary: "Deletes a pet"
    #   description: ""
    #   operationId: "deletePet"
    #   produces:
    #   - "application/xml"
    #   - "application/json"
    #   parameters:
    #   - name: "api_key"
    #     in: "header"
    #     required: false
    #     type: "string"
    #   - name: "petId"
    #     in: "path"
    #     description: "Pet id to delete"
    #     required: true
    #     type: "integer"
    #     format: "int64"
    #   responses:
    #     400:
    #       description: "Invalid ID supplied"
    #     404:
    #       description: "Pet not found"
    #   security:
    #   - petstore_auth:
    #     - "write:pets"
    #     - "read:pets"
    
    
components:
  schemas:
   Item:
    type: object
    properties:
      id:
        type: integer
        description: Автоматически сгенерированный идентификатор
        format: int64
        example: 12221
      name:
        type: string
        description: Имя товара
      category:
        type: string
        enum:
        - NOTEBOOK
        - DESKTOP
        - SERVER
      dateTimeUPD:
        type: string
        format: date-time
        description: Время обновления записи
      price:
        type: number
        format: float
        description: Цена товара
      amount:
        type: integer
        format: int32
        description: Кол-во
    xml:
      name: Item

  
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"